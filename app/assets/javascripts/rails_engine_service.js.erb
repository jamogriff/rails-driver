function railsEngineDomain() {
  return '<%= ENV['RAILS_ENGINE_DOMAIN'] %>'
}

function resourceUrl(resourceUri) {
  return railsEngineDomain() + resourceUri
}

function loadMultipleResources(resourceUri, callback) {
  let url = resourceUrl(resourceUri)
  fetch(url).then(response => {
    return response.json()
  }).then(json => {
    json.data.forEach(function(merchant){
      callback(merchant)
    })
  })
}

function loadResource(resourceUri, callback) {
  let url = resourceUrl(resourceUri)
  fetch(url).then(response => {
    return response.json()
  }).then(json => {
    callback(json.data)
  })
}

function updateResource(resourceUri, payload, callback) {
  let url = resourceUrl(resourceUri)
  let params = {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(payload)
  }
  
  fetch(url, params).then(response => {
    if (!response.ok) {
      throw new Error("Server-side error. Check your input.")
   }
    return response.json()
  })
  .then(json => callback(json.data))
  .catch(error => failureCallback(error))
}

function createResource(resourceUri, payload, callback) {
  let url = resourceUrl(resourceUri)
  let params = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(payload)
  }
  fetch(url, params).then(response => {
    // throws error if response status from API is 4xx/5xx
    if (!response.ok) {
      throw new Error("Server-side error. Check your input")
   }
    return response.json()
  })
   .then(json => callback(json.data))
   .catch(error => failureCallback(error))
}

function destroyResource(resourceUri, callback) {
  let url = resourceUrl(resourceUri)
  let params = {
    method: 'DELETE'
  }
  
  fetch(url, params).then(response => {
    if (!response.ok) {
      throw new Error("Server-side error. Try again later.")
   }
    return callback()
  })
}
